/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 22:22:10 GMT 2023
 */

package org.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.Time;
import org.example.Utravel;
import org.example.filter.Input;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utravel_ESTest extends Utravel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("A", ")i!!v(");
      // Undeclared exception!
      try { 
        utravel0.buyTicket(0, 0, "KR};&|Iu\"$60IZ9c#", "KR};&|Iu\"$60IZ9c#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("^_s4Q0|PrC", "^_s4Q0|PrC");
      // Undeclared exception!
      try { 
        utravel0.buyTicket(1, (-501), "cNo5$`$ A@IsK)[{", "cNo5$`$ A@IsK)[{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup((String) null, (String) null);
      // Undeclared exception!
      try { 
        utravel0.signup((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.readFlights((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      try { 
        utravel0.readFlights("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup((String) null, (String) null);
      // Undeclared exception!
      try { 
        utravel0.login((String) null, "OK\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup((String) null, "0");
      Time time0 = new Time();
      Input input0 = new Input((String) null, (String) null, (String) null, 2.5, 2.5, false, false, (-1819), time0, time0, false, false);
      // Undeclared exception!
      try { 
        utravel0.applyFilter(input0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.filter.AirlineFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      String string0 = utravel0.signup((String) null, "F3s ze,m}");
      assertEquals("OK\n", string0);
      
      String string1 = utravel0.deleteFilters();
      assertEquals("OK\n", string1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("#9.)g:P7]T#qI", "");
      String string0 = utravel0.signup("sZTb=R01KX/EK];GY0", "c!A-%m]^C9%%8v8po");
      assertEquals("OK\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.deleteFilters();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      String string0 = utravel0.signup("", "");
      assertEquals("OK\n", string0);
      
      Time time0 = new Time((-2629), 1);
      Input input0 = new Input("", "QP9{>#6\"O{(5X9", "QP9{>#6\"O{(5X9", 1.0, 144.322330885, true, true, 2147483645, time0, time0, true, false);
      String string1 = utravel0.applyFilter(input0);
      assertEquals("OK\n", string1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("", "");
      utravel0.logout();
      Time time0 = new Time();
      Input input0 = new Input("OK\n", "c'3v2#3'bEy@nz'c", "c'3v2#3'bEy@nz'c", 0.0, 0.0, false, false, (-26), time0, time0, false, false);
      // Undeclared exception!
      try { 
        utravel0.applyFilter(input0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.cancelTicket((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("Permission Denied\n", "Permission Denied\n");
      // Undeclared exception!
      try { 
        utravel0.cancelTicket(7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.printTicket(2147483645);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("#9.)g:P7]T#qI", "");
      // Undeclared exception!
      try { 
        utravel0.printTicket(60);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.printTickets();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup((String) null, "F3s ze,m}");
      // Undeclared exception!
      try { 
        utravel0.printTickets();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Empty
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.buyTicket((-13), (-13), "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("A", "");
      // Undeclared exception!
      try { 
        utravel0.buyTicket((-13), (-13), "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.printFlight(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("org.example.Utravel", "V)!oa%xl-3H|A=mJW\"");
      // Undeclared exception!
      try { 
        utravel0.printFlight(60);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.printFlights();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("", "");
      // Undeclared exception!
      try { 
        utravel0.printFlights();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Empty
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("", "");
      utravel0.logout();
      // Undeclared exception!
      try { 
        utravel0.wallet(0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      String string0 = utravel0.signup("", "");
      assertEquals("OK\n", string0);
      
      String string1 = utravel0.wallet(1.0);
      assertEquals("OK\n", string1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      // Undeclared exception!
      try { 
        utravel0.logout();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Permission Denied
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      String string0 = utravel0.signup("#9.)g:P7]T#qI", "");
      assertEquals("OK\n", string0);
      
      String string1 = utravel0.login("#9.)g:P7]T#qI", "");
      assertEquals("OK\n", string1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("", "");
      // Undeclared exception!
      try { 
        utravel0.login("Bad Request\n", "Bad Request\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Bad Request
         //
         verifyException("org.example.Utravel", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Utravel utravel0 = new Utravel();
      utravel0.signup("p(:0rH}", "");
      // Undeclared exception!
      try { 
        utravel0.signup("p(:0rH}", "p(:0rH}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Bad Request
         //
         verifyException("org.example.Utravel", e);
      }
  }
}
