/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 22:20:36 GMT 2023
 */

package org.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.Flight;
import org.example.User;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User("Epty", "Epty");
      // Undeclared exception!
      try { 
        user0.cancelTicket((-212));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User("", (String) null);
      // Undeclared exception!
      try { 
        user0.increaseCredit((-479.012));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Bad Request
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User("\n", "\n");
      boolean boolean0 = user0.nameIsSame("\n");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User("-Q%!I}HAWh<d_lUi", ":");
      boolean boolean0 = user0.nameIsSame(":");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User((String) null, "");
      // Undeclared exception!
      try { 
        user0.isLoggedIn("Not Found\n", "sH5s+lM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User("J", "{x");
      Flight flight0 = new Flight(4258);
      // Undeclared exception!
      try { 
        user0.buyTicket(4258, flight0, (-20), (String) null, "`2W::*`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.Ticket", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User((String) null, "");
      // Undeclared exception!
      try { 
        user0.printTicket(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not Found
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User("\n", "\n");
      // Undeclared exception!
      try { 
        user0.printTickets();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Empty
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User("", "");
      // Undeclared exception!
      try { 
        user0.increaseCredit(0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Bad Request
         //
         verifyException("org.example.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User("\n", "\n");
      user0.increaseCredit(1116.5726886);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User("0", "0");
      boolean boolean0 = user0.isLoggedIn("0", "/");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User("\n", "\n");
      boolean boolean0 = user0.isLoggedIn("\n", "\n");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User("fyW,p_Vr((]`#ZpO%z", "fyW,p_Vr((]`#ZpO%z");
      boolean boolean0 = user0.isLoggedIn("", "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User("nonrefundable", "nonrefundable");
      Flight flight0 = new Flight(1);
      // Undeclared exception!
      try { 
        user0.buyTicket(549, flight0, 1682, "nonrefundable", "nonrefundable");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Bad Request
         //
         verifyException("org.example.Ticket", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        user0.nameIsSame((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
