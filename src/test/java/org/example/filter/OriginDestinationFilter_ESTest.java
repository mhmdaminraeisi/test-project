/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 22:23:56 GMT 2023
 */

package org.example.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.Flight;
import org.example.Time;
import org.example.filter.Input;
import org.example.filter.OriginDestinationFilter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OriginDestinationFilter_ESTest extends OriginDestinationFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OriginDestinationFilter originDestinationFilter0 = new OriginDestinationFilter();
      LinkedList<Flight> linkedList0 = new LinkedList<Flight>();
      // Undeclared exception!
      try { 
        originDestinationFilter0.apply(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OriginDestinationFilter originDestinationFilter0 = new OriginDestinationFilter();
      Input input0 = new Input("5", "5", "5", (-1538.4159999895), (-1538.4159999895), false, false, 32, (Time) null, (Time) null, false, false);
      originDestinationFilter0.read(input0);
      LinkedList<Flight> linkedList0 = new LinkedList<Flight>();
      Flight flight0 = new Flight(32);
      linkedList0.add(flight0);
      boolean boolean0 = originDestinationFilter0.apply(linkedList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OriginDestinationFilter originDestinationFilter0 = new OriginDestinationFilter();
      Time time0 = new Time();
      Input input0 = new Input("org.example.filter.OriginDestinationFilter", "org.example.filter.OriginDestinationFilter", "", (-172.0813), (-172.0813), false, false, (-1932735237), time0, time0, false, false);
      originDestinationFilter0.read(input0);
      LinkedList<Flight> linkedList0 = new LinkedList<Flight>();
      boolean boolean0 = originDestinationFilter0.apply(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OriginDestinationFilter originDestinationFilter0 = new OriginDestinationFilter();
      Time time0 = new Time(0, 0);
      Input input0 = new Input("", "", "", 0, 0, false, false, 0, time0, time0, false, false);
      originDestinationFilter0.read(input0);
      LinkedList<Flight> linkedList0 = new LinkedList<Flight>();
      boolean boolean0 = originDestinationFilter0.apply(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OriginDestinationFilter originDestinationFilter0 = new OriginDestinationFilter();
      // Undeclared exception!
      try { 
        originDestinationFilter0.read((Input) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.example.filter.OriginDestinationFilter", e);
      }
  }
}
